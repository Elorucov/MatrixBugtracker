// <auto-generated />
using System;
using MatrixBugtracker.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatrixBugtracker.DAL.Migrations
{
    [DbContext(typeof(BugtrackerContext))]
    [Migration("20250511171348_FileLength")]
    partial class FileLength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AsModerator")
                        .HasColumnType("bit")
                        .HasColumnName("as_moderator");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsAttachmentsPrivate")
                        .HasColumnType("bit")
                        .HasColumnName("is_attachments_private");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<byte>("NewSeverity")
                        .HasColumnType("tinyint")
                        .HasColumnName("new_severity");

                    b.Property<byte>("NewStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("new_status");

                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<string>("Text")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("text");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ReportId");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.CommentAttachment", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("int")
                        .HasColumnName("comment_id");

                    b.Property<int>("FileId")
                        .HasColumnType("int")
                        .HasColumnName("file_id");

                    b.HasKey("CommentId", "FileId")
                        .HasName("K_CommentAttachment");

                    b.HasIndex("FileId");

                    b.HasIndex(new[] { "CommentId", "FileId" }, "UQ_CommentAttachment")
                        .IsUnique();

                    b.ToTable("comment_attachments", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Confirmation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<byte>("Kind")
                        .HasColumnType("tinyint")
                        .HasColumnName("kind");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UQ_EmailConfirm")
                        .IsUnique();

                    b.ToTable("confirmations", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Moderator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "UQ_Moder")
                        .IsUnique();

                    b.ToTable("moderators", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeletedByUserId = 0,
                            DeletionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("AccessLevel")
                        .HasColumnType("tinyint")
                        .HasColumnName("access_level");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsOver")
                        .HasColumnType("bit")
                        .HasColumnName("is_over");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("name");

                    b.Property<int?>("PhotoFileId")
                        .HasColumnType("int")
                        .HasColumnName("photo_file_id");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PhotoFileId")
                        .IsUnique()
                        .HasFilter("[photo_file_id] IS NOT NULL");

                    b.HasIndex(new[] { "Name" }, "UQ_ProductName")
                        .IsUnique();

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ProductMember", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("ProductId", "MemberId")
                        .HasName("K_ProductMember");

                    b.HasIndex("MemberId");

                    b.HasIndex(new[] { "ProductId", "MemberId" }, "UQ_ProductMember")
                        .IsUnique();

                    b.ToTable("product_members", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ProductModerator", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("ModeratorId")
                        .HasColumnType("int")
                        .HasColumnName("moderator_id");

                    b.HasKey("ProductId", "ModeratorId")
                        .HasName("K_ProductModerator");

                    b.HasIndex("ModeratorId");

                    b.HasIndex(new[] { "ProductId", "ModeratorId" }, "UQ_ProductModer")
                        .IsUnique();

                    b.ToTable("product_moderators", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Actual")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("actual");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsFilesPrivate")
                        .HasColumnType("bit")
                        .HasColumnName("is_files_private");

                    b.Property<byte>("ProblemType")
                        .HasColumnType("tinyint")
                        .HasColumnName("problem_type");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<byte>("Severity")
                        .HasColumnType("tinyint")
                        .HasColumnName("severity");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.Property<string>("Steps")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("steps");

                    b.Property<string>("Supposed")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("supposed");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_time");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ProductId");

                    b.ToTable("reports", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ReportAttachment", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<int>("FileId")
                        .HasColumnType("int")
                        .HasColumnName("file_id");

                    b.HasKey("ReportId", "FileId")
                        .HasName("K_ReportAttachment");

                    b.HasIndex("FileId");

                    b.HasIndex(new[] { "ReportId", "FileId" }, "UQ_ReportAttachment")
                        .IsUnique();

                    b.ToTable("report_attachments", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ReportReproduce", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ReportId", "UserId")
                        .HasName("K_ReportReproduce");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "ReportId", "UserId" }, "UQ_ReportReproduce")
                        .IsUnique();

                    b.ToTable("report_reproduces", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ReportTag", b =>
                {
                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("report_id");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.HasKey("ReportId", "TagId")
                        .HasName("K_ReportTag");

                    b.HasIndex("TagId");

                    b.HasIndex(new[] { "ReportId", "TagId" }, "UQ_ReportTag")
                        .IsUnique();

                    b.ToTable("report_tags", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit")
                        .HasColumnName("is_archived");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex(new[] { "Name" }, "UQ_TagName")
                        .IsUnique();

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.UploadedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("creation_time");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int")
                        .HasColumnName("creator_id");

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<long>("Length")
                        .HasColumnType("bigint")
                        .HasColumnName("length");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("mime_type");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("original_name");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("path");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex(new[] { "Path" }, "UQ_FilePath")
                        .IsUnique();

                    b.ToTable("files", (string)null);
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeletedByUserId")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by_user_id");

                    b.Property<DateTime>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("is_email_confirmed");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<int?>("PhotoFileId")
                        .HasColumnType("int")
                        .HasColumnName("photo_file_id");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.HasIndex("PhotoFileId")
                        .IsUnique()
                        .HasFilter("[photo_file_id] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UQ_Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeletedByUserId = 0,
                            DeletionTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            FirstName = "John",
                            IsDeleted = false,
                            IsEmailConfirmed = true,
                            LastName = "Doe",
                            Password = "ErqJddTnzV4KPDIxiAoQbBHiF07iX50TOGDBy9DVJamEO6PjBt3Ht5mx1QlbmT/T",
                            Role = (byte)1
                        });
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Comment", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "Creator")
                        .WithMany("Comments")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK_Comment_Creator");

                    b.HasOne("MatrixBugtracker.DAL.Entities.Report", "Report")
                        .WithMany("Comments")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Comment_Report");

                    b.Navigation("Creator");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.CommentAttachment", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CA_Comment");

                    b.HasOne("MatrixBugtracker.DAL.Entities.UploadedFile", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CA_Attachment");

                    b.Navigation("Comment");

                    b.Navigation("File");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Moderator", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "User")
                        .WithOne("Moderator")
                        .HasForeignKey("MatrixBugtracker.DAL.Entities.Moderator", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Moder_Id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Product", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "Creator")
                        .WithMany("Products")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Creator");

                    b.HasOne("MatrixBugtracker.DAL.Entities.UploadedFile", "PhotoFile")
                        .WithOne("PhotoProduct")
                        .HasForeignKey("MatrixBugtracker.DAL.Entities.Product", "PhotoFileId")
                        .HasConstraintName("FK_ProductPhoto");

                    b.Navigation("Creator");

                    b.Navigation("PhotoFile");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ProductMember", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .IsRequired()
                        .HasConstraintName("FK_PU_Member");

                    b.HasOne("MatrixBugtracker.DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_PU_Product");

                    b.Navigation("Member");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ProductModerator", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.Moderator", "Moderator")
                        .WithMany()
                        .HasForeignKey("ModeratorId")
                        .IsRequired()
                        .HasConstraintName("FK_PM_Moderator");

                    b.HasOne("MatrixBugtracker.DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_PM_Product");

                    b.Navigation("Moderator");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Report", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "Creator")
                        .WithMany("Reports")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK_Report_Creator");

                    b.HasOne("MatrixBugtracker.DAL.Entities.Product", "Product")
                        .WithMany("Reports")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Report_Product");

                    b.Navigation("Creator");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ReportAttachment", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.UploadedFile", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .IsRequired()
                        .HasConstraintName("FK_RA_Attachment");

                    b.HasOne("MatrixBugtracker.DAL.Entities.Product", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .IsRequired()
                        .HasConstraintName("FK_RA_Report");

                    b.Navigation("File");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ReportReproduce", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.Product", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .IsRequired()
                        .HasConstraintName("FK_RR_Report");

                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_RR_User");

                    b.Navigation("Report");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.ReportTag", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.Product", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .IsRequired()
                        .HasConstraintName("FK_RT_Report");

                    b.HasOne("MatrixBugtracker.DAL.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK_RT_Tag");

                    b.Navigation("Report");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Tag", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "Creator")
                        .WithMany("Tags")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FK_Tag_Creator");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.UploadedFile", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.User", "Creator")
                        .WithMany("UploadedFiles")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Files_Creator");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.User", b =>
                {
                    b.HasOne("MatrixBugtracker.DAL.Entities.UploadedFile", "PhotoFile")
                        .WithOne("PhotoUser")
                        .HasForeignKey("MatrixBugtracker.DAL.Entities.User", "PhotoFileId")
                        .HasConstraintName("FK_UserPhoto");

                    b.Navigation("PhotoFile");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Product", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.Report", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.UploadedFile", b =>
                {
                    b.Navigation("PhotoProduct");

                    b.Navigation("PhotoUser");
                });

            modelBuilder.Entity("MatrixBugtracker.DAL.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Moderator");

                    b.Navigation("Products");

                    b.Navigation("Reports");

                    b.Navigation("Tags");

                    b.Navigation("UploadedFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
